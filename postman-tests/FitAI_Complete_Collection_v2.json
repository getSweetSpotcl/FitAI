{
  "info": {
    "name": "FitAI API v2 - Complete Testing Suite",
    "description": "Complete API testing collection for FitAI with pre-request scripts, tests, and example data",
    "version": "2.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global pre-request script",
          "console.log('🚀 Executing request to:', pm.request.url.toString());",
          "",
          "// Set timestamp for request tracking",
          "pm.variables.set('request_timestamp', new Date().toISOString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script",
          "pm.test('Response time is less than 1000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(1000);",
          "});",
          "",
          "pm.test('Response has valid Content-Type header', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "{{base_url}}",
      "type": "string"
    },
    {
      "key": "api_version",
      "value": "v1",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "🏃 Quick Start Flow",
      "item": [
        {
          "name": "1. Health Check",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Health check response is valid', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('status', 'healthy');",
                  "    pm.expect(jsonData).to.have.property('timestamp');",
                  "    pm.expect(jsonData).to.have.property('service', 'fitai-api');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "Basic health check endpoint to verify API is running"
          },
          "response": []
        },
        {
          "name": "2. Dev Login (Get Token)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Login successful', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.token).to.be.a('string');",
                  "    ",
                  "    // Save token for all subsequent requests",
                  "    pm.environment.set('auth_token', jsonData.token);",
                  "    console.log('✅ Auth token saved for subsequent requests');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/auth/dev/login",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "auth", "dev", "login"]
            },
            "description": "Get a development token for testing (only works in development environment)"
          },
          "response": []
        },
        {
          "name": "3. Get User Profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('User profile has required fields', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('email');",
                  "    ",
                  "    // Save user ID for subsequent requests",
                  "    pm.environment.set('current_user_id', jsonData.data.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/users/me",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "users", "me"]
            }
          },
          "response": []
        },
        {
          "name": "4. Get Exercises Catalog",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Exercise list is returned', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "    ",
                  "    if (jsonData.data.length > 0) {",
                  "        // Save first exercise ID for testing",
                  "        pm.environment.set('test_exercise_id', jsonData.data[0].id);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/exercises?muscle_group=chest&equipment=barbell&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "exercises"],
              "query": [
                {
                  "key": "muscle_group",
                  "value": "chest"
                },
                {
                  "key": "equipment",
                  "value": "barbell"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "👤 User Management",
      "item": [
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/users/me",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "users", "me"]
            }
          },
          "response": [
            {
              "name": "Success Example",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/{{api_version}}/users/me",
                  "host": ["{{base_url}}"],
                  "path": ["api", "{{api_version}}", "users", "me"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"user_2abc123xyz\",\n    \"clerkUserId\": \"user_2NxyzABC123\",\n    \"email\": \"maria.gonzalez@gmail.com\",\n    \"name\": \"María González\",\n    \"plan\": \"premium\",\n    \"role\": \"user\",\n    \"profile\": {\n      \"goals\": [\"fat_loss\", \"toning\"],\n      \"experienceLevel\": \"beginner\",\n      \"availableDays\": 3,\n      \"height\": 165,\n      \"weight\": 58,\n      \"age\": 32,\n      \"equipment\": [\"dumbbell\", \"resistance_band\"],\n      \"workoutLocation\": \"home\",\n      \"injuries\": [],\n      \"preferences\": {\n        \"language\": \"es\",\n        \"units\": \"metric\",\n        \"notifications\": true\n      }\n    },\n    \"stats\": {\n      \"workoutsCompleted\": 25,\n      \"currentStreak\": 5,\n      \"totalMinutes\": 750,\n      \"caloriesBurned\": 5250\n    },\n    \"createdAt\": \"2024-01-01T00:00:00Z\",\n    \"updatedAt\": \"2024-01-20T18:30:00Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Update User Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"María González Silva\",\n  \"profile\": {\n    \"goals\": [\"fat_loss\", \"endurance\"],\n    \"experienceLevel\": \"intermediate\",\n    \"availableDays\": 4,\n    \"height\": 165,\n    \"weight\": 56,\n    \"age\": 32,\n    \"equipment\": [\"dumbbell\", \"resistance_band\", \"kettlebell\"],\n    \"workoutLocation\": \"home\",\n    \"injuries\": [],\n    \"preferences\": {\n      \"language\": \"es\",\n      \"units\": \"metric\",\n      \"notifications\": true,\n      \"workoutTime\": \"morning\",\n      \"musicPreference\": \"upbeat\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/users/me",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "users", "me"]
            }
          },
          "response": []
        },
        {
          "name": "Delete User Account",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/users/me",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "users", "me"]
            },
            "description": "⚠️ WARNING: This permanently deletes the user account and all associated data"
          },
          "response": []
        }
      ]
    },
    {
      "name": "🏋️ Exercises",
      "item": [
        {
          "name": "Get All Exercises",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/exercises",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "exercises"]
            }
          },
          "response": []
        },
        {
          "name": "Search Exercises",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/exercises?muscle_group=legs&equipment=barbell&difficulty=intermediate&search=squat",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "exercises"],
              "query": [
                {
                  "key": "muscle_group",
                  "value": "legs",
                  "description": "Options: chest, back, shoulders, arms, legs, core"
                },
                {
                  "key": "equipment",
                  "value": "barbell",
                  "description": "Options: none, dumbbell, barbell, kettlebell, cable, machine"
                },
                {
                  "key": "difficulty",
                  "value": "intermediate",
                  "description": "Options: beginner, intermediate, advanced"
                },
                {
                  "key": "search",
                  "value": "squat",
                  "description": "Search term for exercise name"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Exercise by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/exercises/{{exercise_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "exercises", "{{exercise_id}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "💪 Workouts",
      "item": [
        {
          "name": "Start New Workout",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.environment.set('active_session_id', jsonData.data.sessionId);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"routineId\": \"{{routine_id}}\",\n  \"scheduledDate\": \"{{request_timestamp}}\",\n  \"location\": \"gym\",\n  \"notes\": \"Feeling strong today!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/workouts/start",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "workouts", "start"]
            }
          },
          "response": []
        },
        {
          "name": "Log Exercise Set",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sessionId\": \"{{active_session_id}}\",\n  \"exerciseId\": \"{{exercise_id}}\",\n  \"sets\": [\n    {\n      \"setNumber\": 1,\n      \"weight\": 80,\n      \"reps\": 10,\n      \"restTime\": 90,\n      \"rpe\": 7,\n      \"notes\": \"Good form\"\n    },\n    {\n      \"setNumber\": 2,\n      \"weight\": 80,\n      \"reps\": 8,\n      \"restTime\": 90,\n      \"rpe\": 8\n    },\n    {\n      \"setNumber\": 3,\n      \"weight\": 75,\n      \"reps\": 8,\n      \"restTime\": 120,\n      \"rpe\": 9,\n      \"notes\": \"Last set tough\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/workouts/log",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "workouts", "log"]
            }
          },
          "response": []
        },
        {
          "name": "Complete Workout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sessionId\": \"{{active_session_id}}\",\n  \"totalDuration\": 3600,\n  \"caloriesBurned\": 450,\n  \"notes\": \"Great workout! Hit all my targets.\",\n  \"mood\": \"energetic\",\n  \"fatigue\": 7\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/workouts/complete",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "workouts", "complete"]
            }
          },
          "response": []
        },
        {
          "name": "Get Workout History",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/workouts/history?limit=20&offset=0",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "workouts", "history"],
              "query": [
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "offset",
                  "value": "0"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "📋 Routines",
      "item": [
        {
          "name": "Get My Routines",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/routines",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "routines"]
            }
          },
          "response": []
        },
        {
          "name": "Create Custom Routine",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Upper Body Power\",\n  \"description\": \"Focused on building upper body strength\",\n  \"type\": \"strength\",\n  \"difficulty\": \"intermediate\",\n  \"duration\": 60,\n  \"frequency\": 3,\n  \"exercises\": [\n    {\n      \"exerciseId\": \"ex_bench_press\",\n      \"sets\": 4,\n      \"reps\": \"8-10\",\n      \"restTime\": 120,\n      \"order\": 1,\n      \"notes\": \"Focus on explosive concentric\"\n    },\n    {\n      \"exerciseId\": \"ex_pull_up\",\n      \"sets\": 4,\n      \"reps\": \"6-8\",\n      \"restTime\": 90,\n      \"order\": 2\n    },\n    {\n      \"exerciseId\": \"ex_shoulder_press\",\n      \"sets\": 3,\n      \"reps\": \"10-12\",\n      \"restTime\": 90,\n      \"order\": 3\n    }\n  ],\n  \"tags\": [\"strength\", \"upper_body\", \"gym\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/routines",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "routines"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "🤖 AI Features",
      "item": [
        {
          "name": "Generate AI Routine",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"preferences\": {\n    \"primaryGoal\": \"muscle_gain\",\n    \"secondaryGoals\": [\"strength\", \"endurance\"],\n    \"experienceLevel\": \"intermediate\",\n    \"availableDays\": 4,\n    \"sessionDuration\": 60,\n    \"equipment\": [\"barbell\", \"dumbbell\", \"cable\"],\n    \"location\": \"gym\",\n    \"injuries\": [],\n    \"focusAreas\": [\"chest\", \"back\", \"legs\"],\n    \"avoidExercises\": [\"deadlift\"]\n  },\n  \"routineType\": \"push_pull_legs\",\n  \"progressionStyle\": \"linear\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/ai/generate-routine",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "ai", "generate-routine"]
            }
          },
          "response": []
        },
        {
          "name": "Get AI Workout Advice",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"question\": \"How can I break through my bench press plateau? I've been stuck at 80kg for 3 weeks.\",\n  \"context\": {\n    \"currentWeight\": 80,\n    \"bodyWeight\": 75,\n    \"experience\": \"intermediate\",\n    \"recentWorkouts\": [\n      {\n        \"date\": \"2024-01-20\",\n        \"exercise\": \"bench_press\",\n        \"sets\": [{\"weight\": 80, \"reps\": 5}, {\"weight\": 80, \"reps\": 4}, {\"weight\": 80, \"reps\": 4}]\n      }\n    ]\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/ai/advice",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "ai", "advice"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "📊 Analytics",
      "item": [
        {
          "name": "Get Progress Overview",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/analytics/progress?period=last_30_days",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "analytics", "progress"],
              "query": [
                {
                  "key": "period",
                  "value": "last_30_days"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Exercise Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/analytics/exercises/{{exercise_id}}/stats",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "analytics", "exercises", "{{exercise_id}}", "stats"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "💳 Payments (MercadoPago)",
      "item": [
        {
          "name": "Create Payment Preference",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"plan\": \"premium\",\n  \"billingCycle\": \"monthly\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/payments/create-preference",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "payments", "create-preference"]
            }
          },
          "response": []
        },
        {
          "name": "Process Payment Webhook",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"action\": \"payment.created\",\n  \"api_version\": \"v1\",\n  \"data\": {\n    \"id\": \"123456789\"\n  },\n  \"date_created\": \"2024-01-20T10:00:00Z\",\n  \"id\": 12345,\n  \"live_mode\": true,\n  \"type\": \"payment\",\n  \"user_id\": \"{{user_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/payments/webhook",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "payments", "webhook"]
            },
            "description": "MercadoPago webhook endpoint for payment notifications"
          },
          "response": []
        }
      ]
    },
    {
      "name": "🍎 Health Integration",
      "item": [
        {
          "name": "Sync HealthKit Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"metrics\": [\n    {\n      \"type\": \"heart_rate\",\n      \"value\": 72,\n      \"unit\": \"bpm\",\n      \"timestamp\": \"2024-01-20T08:00:00Z\"\n    },\n    {\n      \"type\": \"steps\",\n      \"value\": 8500,\n      \"unit\": \"count\",\n      \"timestamp\": \"2024-01-20T20:00:00Z\"\n    },\n    {\n      \"type\": \"active_calories\",\n      \"value\": 450,\n      \"unit\": \"kcal\",\n      \"timestamp\": \"2024-01-20T20:00:00Z\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/health/sync",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "health", "sync"]
            }
          },
          "response": []
        },
        {
          "name": "Get Health Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/health/metrics?type=heart_rate&period=last_7_days",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "health", "metrics"],
              "query": [
                {
                  "key": "type",
                  "value": "heart_rate"
                },
                {
                  "key": "period",
                  "value": "last_7_days"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "🔐 Authentication",
      "item": [
        {
          "name": "Dev Login (Development Only)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains token', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success', true);",
                  "    pm.expect(jsonData).to.have.property('token');",
                  "    pm.expect(jsonData).to.have.property('user');",
                  "    ",
                  "    // Save token for other requests",
                  "    pm.environment.set('auth_token', jsonData.token);",
                  "    pm.environment.set('user_id', jsonData.user.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// This endpoint only works in development environment",
                  "console.log('⚠️  This endpoint is for development only!');"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/auth/dev/login",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "auth", "dev", "login"]
            },
            "description": "Development-only login endpoint. Returns a mock JWT token for testing. DO NOT use in production."
          },
          "response": []
        },
        {
          "name": "Dev Token Info",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains info', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "    pm.expect(jsonData).to.have.property('example');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/auth/dev/token-info",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "auth", "dev", "token-info"]
            },
            "description": "Get information about how to obtain a development token"
          },
          "response": []
        },
        {
          "name": "Webhook - User Created (Clerk)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "svix-id",
                "value": "msg_2NxyzABC123",
                "description": "Svix message ID"
              },
              {
                "key": "svix-timestamp",
                "value": "1706716800",
                "description": "Unix timestamp"
              },
              {
                "key": "svix-signature",
                "value": "v1,g0hM9SsE+OTPJTGt/tmIKtSyZlE3uFJELVlNIOLJ1OE=",
                "description": "Webhook signature"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"birthday\": \"\",\n    \"created_at\": 1706716800000,\n    \"email_addresses\": [\n      {\n        \"email_address\": \"test@example.com\",\n        \"id\": \"idn_2NxyzABC123\",\n        \"linked_to\": [],\n        \"object\": \"email_address\",\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"from_oauth_google\"\n        }\n      }\n    ],\n    \"external_accounts\": [],\n    \"external_id\": null,\n    \"first_name\": \"Test\",\n    \"gender\": \"\",\n    \"id\": \"user_2NxyzABC123\",\n    \"image_url\": \"https://img.clerk.com/preview.png\",\n    \"last_name\": \"User\",\n    \"last_sign_in_at\": 1706716800000,\n    \"object\": \"user\",\n    \"password_enabled\": false,\n    \"phone_numbers\": [],\n    \"primary_email_address_id\": \"idn_2NxyzABC123\",\n    \"primary_phone_number_id\": null,\n    \"primary_web3_wallet_id\": null,\n    \"private_metadata\": {},\n    \"profile_image_url\": \"https://img.clerk.com/preview.png\",\n    \"public_metadata\": {},\n    \"two_factor_enabled\": false,\n    \"unsafe_metadata\": {},\n    \"updated_at\": 1706716800000,\n    \"username\": null,\n    \"web3_wallets\": []\n  },\n  \"object\": \"event\",\n  \"type\": \"user.created\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/webhooks/clerk",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "webhooks", "clerk"]
            }
          },
          "response": []
        }
      ]
    }
  ]
}